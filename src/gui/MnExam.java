/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import daoImp.DapAnImplDAO;
import DAOimpl.MonImplDAO;
import contrain.DatabaseConnections;
import dao.BoDeDAO;
import dao.CauHoiDAO;
import dao.DapAnDAO;
import dao.HangCauDAO;
import dao.MonHocDAO;
import dao.TeacherDAO;
import daoImp.BoDeImplDAO;
import daoImp.CauHoiImplDAO;
import daoImp.HangCauImplDAO;
import daoImp.TeacherImplDAO;
import entity.BoDe;
import entity.BoDeChiTiet;
import entity.CauHoi;
import entity.DapAn;
import entity.GiaoVien;
import entity.HangCau;
import entity.Mon;
import java.sql.Connection;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author duyet
 */
public class MnExam extends javax.swing.JPanel {

    private Connection con;
    private HangCauDAO hcDao;
    private MonHocDAO monDAO;
    private CauHoiDAO cauhoiDAO;
    private DapAnDAO daDAO;
    private BoDeDAO bdDAO;
    private TeacherDAO tdao;
    private int hangCauId;
    private int cauhoiId;
    private int idQuesExam;
    private boolean checkEditLevel = true;
    private boolean checkEditQuestion = true;
    GiaoVien teach;

    /**
     * Creates new form MnExam
     */
    public MnExam(GiaoVien gv) {
        initComponents();
        teach = gv;
        con = DatabaseConnections.getConnect();
        hcDao = new HangCauImplDAO(con);
        monDAO = new MonImplDAO(con);
        cauhoiDAO = new CauHoiImplDAO(con);
        daDAO = new DapAnImplDAO(con);
        bdDAO = new BoDeImplDAO(con);
        tdao = new TeacherImplDAO(con);
        loadTblHangCau();
        loadCBMon();
        loadCBHangCau();
        loadTblQuestion();
        loadTblExam();

        // Sort Table 
        tblQuestion.setAutoCreateRowSorter(true);
        tblExam.setAutoCreateRowSorter(true);
        tblLevel.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grAnswer = new javax.swing.ButtonGroup();
        grpLevelPoint = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        MnExam = new javax.swing.JPanel();
        lblTitleẼam = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        txtIdExam = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtDescExam = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        cboTotalPoint = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        btnSaveExam = new javax.swing.JButton();
        btnNewExam = new javax.swing.JButton();
        btnUpdStatusExam = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JSeparator();
        lblTitleQuestion2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblExam = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        txtSearchExam = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        cboSubjectExam = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        lblTitleQuestion = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQuestion = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtFindQuestion = new javax.swing.JTextField();
        btnUpdQuestion = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        cboFindSubject = new javax.swing.JComboBox<>();
        InsQuestion = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cboSubject = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cboClass = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaNote = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        chxStatus = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        txtQuestion = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtA = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtB = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtC = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtD = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnNewQuestion = new javax.swing.JButton();
        btnSaveQuestion = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        rdoA = new javax.swing.JRadioButton();
        rdoB = new javax.swing.JRadioButton();
        rdoC = new javax.swing.JRadioButton();
        rdoD = new javax.swing.JRadioButton();
        btnDeleteQuestion = new javax.swing.JButton();
        lblTitleInsQues = new javax.swing.JLabel();
        MnLevel = new javax.swing.JPanel();
        lblTitleLevel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtIdLevel = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaDescLevel = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        rdoDiem1 = new javax.swing.JRadioButton();
        rdoDiem2 = new javax.swing.JRadioButton();
        rdoDiem3 = new javax.swing.JRadioButton();
        rdoDiem4 = new javax.swing.JRadioButton();
        btnNew = new javax.swing.JButton();
        btnSaveLevel = new javax.swing.JButton();
        btnDeleteLevel = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblLevel = new javax.swing.JTable();

        lblTitleẼam.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTitleẼam.setForeground(new java.awt.Color(204, 0, 204));
        lblTitleẼam.setText("? ĐỀ THI");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Mã đề thi:");

        txtIdExam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("Mô tả:");

        txtDescExam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("Mức Điểm:");

        cboTotalPoint.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        cboTotalPoint.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10 Điểm", "20 Điểm" }));

        jLabel21.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 51, 51));
        jLabel21.setText("*Bộ đề sẽ được tạo ngẫu nhiên dựa trên số điểm bạn chọn!");

        btnSaveExam.setBackground(new java.awt.Color(204, 0, 204));
        btnSaveExam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Save-icon.png"))); // NOI18N
        btnSaveExam.setText("Lưu");
        btnSaveExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveExamActionPerformed(evt);
            }
        });

        btnNewExam.setBackground(new java.awt.Color(204, 0, 204));
        btnNewExam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Clear-icon.png"))); // NOI18N
        btnNewExam.setText("Thêm");
        btnNewExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewExamActionPerformed(evt);
            }
        });

        btnUpdStatusExam.setBackground(new java.awt.Color(204, 0, 204));
        btnUpdStatusExam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update.png"))); // NOI18N
        btnUpdStatusExam.setText("Mở / Khóa");
        btnUpdStatusExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdStatusExamActionPerformed(evt);
            }
        });

        lblTitleQuestion2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTitleQuestion2.setForeground(new java.awt.Color(204, 0, 204));
        lblTitleQuestion2.setText("DANH SÁCH ĐỀ THI");

        tblExam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(tblExam);

        jLabel22.setText("Tìm kiếm:");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setText("Môn:");

        cboSubjectExam.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        javax.swing.GroupLayout MnExamLayout = new javax.swing.GroupLayout(MnExam);
        MnExam.setLayout(MnExamLayout);
        MnExamLayout.setHorizontalGroup(
            MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MnExamLayout.createSequentialGroup()
                .addGap(213, 213, 213)
                .addComponent(lblTitleẼam)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(MnExamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addGap(51, 51, 51)
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MnExamLayout.createSequentialGroup()
                                .addComponent(txtDescExam, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(MnExamLayout.createSequentialGroup()
                                .addComponent(cboTotalPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(56, 56, 56)
                        .addComponent(txtIdExam, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)))
                .addComponent(jLabel23)
                .addGap(18, 18, 18)
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNewExam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSaveExam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(49, 49, 49)
                        .addComponent(btnUpdStatusExam))
                    .addComponent(cboSubjectExam, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(274, Short.MAX_VALUE))
            .addGroup(MnExamLayout.createSequentialGroup()
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator6))
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator7))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MnExamLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6))
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MnExamLayout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(MnExamLayout.createSequentialGroup()
                                .addGap(210, 210, 210)
                                .addComponent(lblTitleQuestion2))
                            .addGroup(MnExamLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel22)
                                .addGap(40, 40, 40)
                                .addComponent(txtSearchExam, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        MnExamLayout.setVerticalGroup(
            MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MnExamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleẼam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtIdExam, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNewExam))
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDescExam, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSaveExam)
                            .addComponent(btnUpdStatusExam))))
                .addGap(17, 17, 17)
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTotalPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboSubjectExam, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitleQuestion2)
                .addGap(20, 20, 20)
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtSearchExam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        jTabbedPane1.addTab("Quản lý đề thi", MnExam);

        lblTitleQuestion.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTitleQuestion.setForeground(new java.awt.Color(204, 0, 204));
        lblTitleQuestion.setText("DANH SÁCH CÂU HỎI");

        tblQuestion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblQuestion.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(tblQuestion);

        jLabel1.setText("Tìm kiếm:");

        btnUpdQuestion.setBackground(new java.awt.Color(204, 0, 204));
        btnUpdQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update.png"))); // NOI18N
        btnUpdQuestion.setText("Sửa");
        btnUpdQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdQuestionActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Môn:");

        cboFindSubject.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator5)
                            .addComponent(jScrollPane1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addGap(225, 225, 225)
                                .addComponent(lblTitleQuestion))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFindQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(jLabel17)
                                .addGap(18, 18, 18)
                                .addComponent(cboFindSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 112, 112)
                                .addComponent(btnUpdQuestion)))
                        .addGap(0, 177, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleQuestion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFindQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdQuestion)
                    .addComponent(jLabel17)
                    .addComponent(cboFindSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý câu hỏi", jPanel5);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("ID:");

        lblId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblId.setText("Auto ascending");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Môn:");

        cboSubject.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("Hạng câu:");

        cboClass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("Ghi chú:");

        txaNote.setColumns(20);
        txaNote.setRows(5);
        jScrollPane2.setViewportView(txaNote);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setText("Trạng thái:");

        chxStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chxStatus.setText("Mở / Khóa");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setText("Câu hỏi:");

        txtQuestion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel9.setText("A:");

        txtA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel10.setText("B:");

        txtB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel11.setText("C:");

        txtC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel12.setText("D:");

        txtD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel13.setText("Câu trả lời:");

        btnNewQuestion.setBackground(new java.awt.Color(204, 0, 204));
        btnNewQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Clear-icon.png"))); // NOI18N
        btnNewQuestion.setText("Thêm");
        btnNewQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewQuestionActionPerformed(evt);
            }
        });

        btnSaveQuestion.setBackground(new java.awt.Color(204, 0, 204));
        btnSaveQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Save-icon.png"))); // NOI18N
        btnSaveQuestion.setText("Lưu");
        btnSaveQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveQuestionActionPerformed(evt);
            }
        });

        grAnswer.add(rdoA);
        rdoA.setText("A");

        grAnswer.add(rdoB);
        rdoB.setText("B");

        grAnswer.add(rdoC);
        rdoC.setText("C");

        grAnswer.add(rdoD);
        rdoD.setText("D");

        btnDeleteQuestion.setBackground(new java.awt.Color(204, 0, 204));
        btnDeleteQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btnDeleteQuestion.setText("Xóa");

        lblTitleInsQues.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTitleInsQues.setForeground(new java.awt.Color(204, 0, 204));
        lblTitleInsQues.setText("THÊM CÂU HỎI");

        javax.swing.GroupLayout InsQuestionLayout = new javax.swing.GroupLayout(InsQuestion);
        InsQuestion.setLayout(InsQuestionLayout);
        InsQuestionLayout.setHorizontalGroup(
            InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InsQuestionLayout.createSequentialGroup()
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InsQuestionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1)
                            .addGroup(InsQuestionLayout.createSequentialGroup()
                                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(40, 40, 40)
                                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cboSubject, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboClass, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chxStatus, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                    .addComponent(lblId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(105, 105, 105)
                                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(InsQuestionLayout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoA)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoB)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoC)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoD))
                                    .addGroup(InsQuestionLayout.createSequentialGroup()
                                        .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel8))
                                        .addGap(38, 38, 38)
                                        .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtB, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtA, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtC, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtD, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(InsQuestionLayout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(lblTitleInsQues))
                    .addGroup(InsQuestionLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(btnNewQuestion)
                        .addGap(79, 79, 79)
                        .addComponent(btnSaveQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(btnDeleteQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        InsQuestionLayout.setVerticalGroup(
            InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InsQuestionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleInsQues)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblId)
                    .addComponent(jLabel8)
                    .addComponent(txtQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(chxStatus)
                    .addComponent(jLabel11)
                    .addComponent(txtC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(InsQuestionLayout.createSequentialGroup()
                        .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(txtD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(rdoA)
                            .addComponent(rdoB)
                            .addComponent(rdoC)
                            .addComponent(rdoD))))
                .addGap(29, 29, 29)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewQuestion)
                    .addComponent(btnSaveQuestion)
                    .addComponent(btnDeleteQuestion))
                .addContainerGap(177, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Thêm câu hỏi", InsQuestion);

        lblTitleLevel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTitleLevel.setForeground(new java.awt.Color(204, 0, 204));
        lblTitleLevel.setText("THÊM HẠNG CÂU");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Mã hạng:");

        txtIdLevel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Mô tả:");

        txaDescLevel.setColumns(20);
        txaDescLevel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        txaDescLevel.setRows(5);
        jScrollPane3.setViewportView(txaDescLevel);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Mức điểm:");

        grpLevelPoint.add(rdoDiem1);
        rdoDiem1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdoDiem1.setText("0.5");

        grpLevelPoint.add(rdoDiem2);
        rdoDiem2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdoDiem2.setText("1.0");

        grpLevelPoint.add(rdoDiem3);
        rdoDiem3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdoDiem3.setText("1.5");

        grpLevelPoint.add(rdoDiem4);
        rdoDiem4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdoDiem4.setText("2.0");

        btnNew.setBackground(new java.awt.Color(204, 0, 204));
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Clear-icon.png"))); // NOI18N
        btnNew.setText("Thêm");

        btnSaveLevel.setBackground(new java.awt.Color(204, 0, 204));
        btnSaveLevel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Save-icon.png"))); // NOI18N
        btnSaveLevel.setText("Lưu");
        btnSaveLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveLevelActionPerformed(evt);
            }
        });

        btnDeleteLevel.setBackground(new java.awt.Color(204, 0, 204));
        btnDeleteLevel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btnDeleteLevel.setText("Xóa");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(204, 0, 204));
        jLabel16.setText("DANH SÁCH HẠNG CÂU");

        tblLevel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblLevel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLevelMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblLevel);

        javax.swing.GroupLayout MnLevelLayout = new javax.swing.GroupLayout(MnLevel);
        MnLevel.setLayout(MnLevelLayout);
        MnLevelLayout.setHorizontalGroup(
            MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MnLevelLayout.createSequentialGroup()
                .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MnLevelLayout.createSequentialGroup()
                        .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MnLevelLayout.createSequentialGroup()
                                .addGap(237, 237, 237)
                                .addComponent(lblTitleLevel))
                            .addGroup(MnLevelLayout.createSequentialGroup()
                                .addGap(236, 236, 236)
                                .addComponent(jLabel16)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(MnLevelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MnLevelLayout.createSequentialGroup()
                                .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel14))
                                .addGap(32, 32, 32)
                                .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtIdLevel)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE))
                                .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(MnLevelLayout.createSequentialGroup()
                                        .addGap(135, 135, 135)
                                        .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel15)
                                                .addGroup(MnLevelLayout.createSequentialGroup()
                                                    .addComponent(rdoDiem1)
                                                    .addGap(50, 50, 50)
                                                    .addComponent(rdoDiem2)
                                                    .addGap(41, 41, 41)
                                                    .addComponent(rdoDiem3)
                                                    .addGap(43, 43, 43)
                                                    .addComponent(rdoDiem4)))
                                            .addGroup(MnLevelLayout.createSequentialGroup()
                                                .addComponent(btnNew)
                                                .addGap(50, 50, 50)
                                                .addComponent(btnSaveLevel)
                                                .addGap(43, 43, 43)
                                                .addComponent(btnDeleteLevel)))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(MnLevelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jSeparator3))))
                            .addComponent(jSeparator4))))
                .addContainerGap())
            .addGroup(MnLevelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 998, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        MnLevelLayout.setVerticalGroup(
            MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MnLevelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleLevel)
                .addGap(18, 18, 18)
                .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtIdLevel)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(MnLevelLayout.createSequentialGroup()
                            .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rdoDiem1)
                                .addComponent(rdoDiem2)
                                .addComponent(rdoDiem3)
                                .addComponent(rdoDiem4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(13, 13, 13)
                            .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnNew)
                                .addComponent(btnSaveLevel)
                                .addComponent(btnDeleteLevel)))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý hạng câu", MnLevel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // LEVEL FUNCTION HANDLE
    private void btnSaveLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveLevelActionPerformed
        //Luu thong tin thay doi tren form them moi va chinh sua hang cau
        HangCau hc = new HangCau();
        hc.setMa_hang(txtIdLevel.getText());
        hc.setMo_ta(txaDescLevel.getText());
        if (rdoDiem1.isSelected()) {
            hc.setMuc_diem(Float.parseFloat(rdoDiem1.getText()));
        } else if (rdoDiem2.isSelected()) {
            hc.setMuc_diem(Float.parseFloat(rdoDiem2.getText()));
        } else if (rdoDiem3.isSelected()) {
            hc.setMuc_diem(Float.parseFloat(rdoDiem3.getText()));
        } else {
            hc.setMuc_diem(Float.parseFloat(rdoDiem4.getText()));
        }
        //      ngay tao bang lay ngay thang nam tren he thong may tinh
        Timestamp ts = new Timestamp(new Date().getTime());
        java.sql.Date sqlDou = new java.sql.Date(ts.getTime());
        hc.setNgay_tao(sqlDou);
//      ngay cap nhat mac dinh lay theo ngay tao neu la lan dau tien
        hc.setNgay_cap_nhat(sqlDou);
        hc.setStatus(true);
        if (checkEditLevel) {
            // insert data
            hcDao.insert(hc);
            JOptionPane.showMessageDialog(this, "Thêm mới thành công!");
            loadTblHangCau();
            loadCBHangCau();
        } else {
            hc.setId(hangCauId);
            hcDao.update(hc);
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
            loadTblHangCau();
            loadCBHangCau();
        }

    }//GEN-LAST:event_btnSaveLevelActionPerformed

    private void tblLevelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLevelMouseClicked
        //  click hien thi thong tin len form hang cau
        int rowSelect = tblLevel.getSelectedRow();
        hangCauId = (int) tblLevel.getValueAt(rowSelect, 0);
        HangCau hc = hcDao.getById(hangCauId);
        lblTitleLevel.setText("Sửa Thông Tin Hạng Câu");
        txtIdLevel.setText(hc.getMa_hang());
        txaDescLevel.setText(hc.getMo_ta());
        float checkMark = (float) tblLevel.getValueAt(rowSelect, 3);
        if (checkMark == 0.5) {
            rdoDiem1.setSelected(true);
        } else if (checkMark == 1.0) {
            rdoDiem2.setSelected(true);
        } else if (checkMark == 1.5) {
            rdoDiem3.setSelected(true);
        } else {
            rdoDiem4.setSelected(true);
        }
        checkEditLevel = false;
    }//GEN-LAST:event_tblLevelMouseClicked

    // QUESTION FUNCTION HANDLE
    private void btnUpdQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdQuestionActionPerformed
        checkEditQuestion = false;
        int selectUpd = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn sửa!", "Thông Báo!", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/img/exit-48px.png"));
        if (selectUpd == 0) {
            jTabbedPane1.setSelectedIndex(2);
            int rowSelect = tblQuestion.getSelectedRow();
            cauhoiId = (int) tblQuestion.getValueAt(rowSelect, 0);
            CauHoi ch = cauhoiDAO.getById(cauhoiId);
            txtQuestion.setText(ch.getNoi_dung());
            Mon m = monDAO.getById(ch.getId_mon());
            for (int i = 0; i < cboSubject.getItemCount(); i++) {
                if (cboSubject.getItemAt(i).getTen_mon().equals(m.getTen_mon())) {
                    cboSubject.setSelectedIndex(i);
                }
            }
            HangCau hc = hcDao.getById(ch.getId_hang());
            for (int i = 0; i < cboClass.getItemCount(); i++) {
                if (cboClass.getItemAt(i).getMa_hang().equals(hc.getMa_hang())) {
                    cboClass.setSelectedIndex(i);
                }
            }
            if (ch.isTrang_thai()) {
                chxStatus.setSelected(true);
            }
            txaNote.setText(ch.getGhi_chu());
            // DANH SÁCH ĐÁP ÁN
            List<DapAn> da = daDAO.getAllAnsert(ch.getId());
            int i = 1;
            for (Iterator<DapAn> it = da.iterator(); it.hasNext();) {
                DapAn dapAn = it.next();
                if (i == 1) {
                    txtA.setText(dapAn.getNoi_dung());
                } else if (i == 2) {
                    txtB.setText(dapAn.getNoi_dung());
                } else if (i == 3) {
                    txtC.setText(dapAn.getNoi_dung());
                } else if (i == 4) {
                    txtD.setText(dapAn.getNoi_dung());
                }
                i++;
            }
            DapAn dapan = daDAO.getByIdQuestion(cauhoiId);
            if (dapan.getNoi_dung().equals(txtA.getText())) {
                rdoA.setSelected(true);
            } else if (dapan.getNoi_dung().equals(txtB.getText())) {
                rdoB.setSelected(true);
            } else if (dapan.getNoi_dung().equals(txtC.getText())) {
                rdoC.setSelected(true);
            } else if (dapan.getNoi_dung().equals(txtD.getText())) {
                rdoD.setSelected(true);
            }
        }

    }//GEN-LAST:event_btnUpdQuestionActionPerformed

    private void btnSaveQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveQuestionActionPerformed
        // them moi cau hoi
        CauHoi ch = new CauHoi();
        int idCBSuj = cboSubject.getItemAt(cboSubject.getSelectedIndex()).getId();
        ch.setId_mon(idCBSuj);
        int idCBHangCau = cboClass.getItemAt(cboClass.getSelectedIndex()).getId();
        ch.setId_hang(idCBHangCau);
        // Câu hỏi - Nội dung
        ch.setNoi_dung(txtQuestion.getText());
        //      ngay tao bang lay ngay thang nam tren he thong may tinh
        Timestamp ts = new Timestamp(new Date().getTime());
        java.sql.Date sqlDou = new java.sql.Date(ts.getTime());
//      ngay cap nhat mac dinh lay theo ngay tao neu la lan dau tien
        ch.setNgay_cap_nhat(sqlDou);
        // ghi chu
        ch.setGhi_chu(txaNote.getText());
        ch.setTrang_thai(chxStatus.isSelected());

        if (checkEditQuestion) {
            ch.setNgay_tao(sqlDou);
            cauhoiDAO.insert(ch);
            int idInsertFit = cauhoiDAO.getIdInsert().getId();
            String list[] = {txtA.getText(), txtB.getText(), txtC.getText(), txtD.getText()};
            int a = 1;
            for (String string : list) {
                DapAn da = new DapAn();
                da.setId_cauhoi(idInsertFit);
                da.setNoi_dung(string);
                if (rdoA.isSelected() && a == 1) {
                    da.setDap_an(true);
                } else if (rdoB.isSelected() && a == 2) {
                    da.setDap_an(true);
                } else if (rdoC.isSelected() && a == 3) {
                    da.setDap_an(true);
                } else if (rdoD.isSelected() && a == 4) {
                    da.setDap_an(true);
                }
                daDAO.insert(da);
                a++;
            }
            JOptionPane.showMessageDialog(this, "Thêm câu hỏi thành công!", "Thông báo!", JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/img/tick.png"));
            loadFormQuestion();
            loadTblQuestion();
        } else {
            ch.setId(cauhoiId);
            cauhoiDAO.update(ch);
            String list[] = {txtA.getText(), txtB.getText(), txtC.getText(), txtD.getText()};
            List<DapAn> ans = daDAO.getAllAnsert(cauhoiId);
            int i = 0;
            int b = 1;
            for (DapAn an : ans) {
                DapAn da = daDAO.getById(an.getId());
                da.setId(an.getId());
                da.setNoi_dung(list[i++]);
                if (rdoA.isSelected() && b == 1) {
                    da.setDap_an(true);
                } else if (rdoB.isSelected() && b == 2) {
                    da.setDap_an(true);
                } else if (rdoC.isSelected() && b == 3) {
                    da.setDap_an(true);
                } else if (rdoD.isSelected() && b == 4) {
                    da.setDap_an(true);
                } else {
                    da.setDap_an(false);
                }
                daDAO.update(da);
                b++;
            }
            JOptionPane.showMessageDialog(this, "Cập nhật câu hỏi thành công!", "Thông báo!", JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/img/tick.png"));
            loadFormQuestion();
            loadTblQuestion();
            jTabbedPane1.setSelectedIndex(2);
        }

    }//GEN-LAST:event_btnSaveQuestionActionPerformed

    private void btnNewQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewQuestionActionPerformed
        loadFormQuestion();
    }//GEN-LAST:event_btnNewQuestionActionPerformed

    private void loadFormQuestion() {
        checkEditQuestion = true;
        cboSubject.setSelectedIndex(0);
        cboClass.setSelectedIndex(0);
        chxStatus.setSelected(false);
        txaNote.setText("");
        txtQuestion.setText("");
        txtA.setText("");
        txtB.setText("");
        txtC.setText("");
        txtD.setText("");
        grAnswer.clearSelection();
    }

    // EXAM FUNCTION HANDLE
    private void btnSaveExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveExamActionPerformed
        BoDe bd = new BoDe();
        bd.setId_giangvien(teach.getId());
        bd.setNoi_dung(txtIdExam.getText());
        Timestamp ts = new Timestamp(new Date().getTime());
        java.sql.Date dateSql = new java.sql.Date(ts.getTime());
        bd.setNgay_tao(dateSql);
        bd.setNgay_cap_nhat(dateSql);
        bd.setMo_ta(txtDescExam.getText());
        bd.setTrang_thai(true);
        bdDAO.insert(bd);

        // Tạo bộ đề chi tiết
        BoDeChiTiet bdct = new BoDeChiTiet();
        int ifie = bdDAO.idFitInsExam().getId();

        // Lấy dữ liệu câu hỏi
        idFitInsExam();
        List<CauHoi> ques = cauhoiDAO.getAllBySubject(idQuesExam);
        List<CauHoi> ld = new ArrayList<>();
        List<CauHoi> ltb = new ArrayList<>();
        List<CauHoi> lk = new ArrayList<>();
        List<CauHoi> lg = new ArrayList<>();
        ques.forEach((que) -> {
            switch (que.getId_hang()) {
                case 1:
                    ld.add(que);
                    break;
                case 2:
                    ltb.add(que);
                    break;
                case 3:
                    lk.add(que);
                    break;
                case 4:
                    lg.add(que);
                    break;
                default:
                    break;
            }
        });

        // Xử lí bộ đề theo điểm
        if (cboTotalPoint.getSelectedIndex() == 0) {
            // Xử lí câu hỏi
            bdct.setId_bode(ifie);
            Collections.shuffle(ld);
            Collections.shuffle(ltb);
            Collections.shuffle(lk);
            Collections.shuffle(lg);
            for (int i = 0; i < 4; i++) {
                bdct.setId_cauhoi(ld.get(i).getId());
                CauHoi ch = cauhoiDAO.getById(ld.get(i).getId());
                HangCau hc = hcDao.getById(ch.getId_hang());
                bdct.setDiem(hc.getMuc_diem());
                bdDAO.insBoDeChiTiet(bdct);
            }
            for (int i = 0; i < 3; i++) {
                bdct.setId_cauhoi(ltb.get(i).getId());
                CauHoi ch = cauhoiDAO.getById(ltb.get(i).getId());
                HangCau hc = hcDao.getById(ch.getId_hang());
                bdct.setDiem(hc.getMuc_diem());
                bdDAO.insBoDeChiTiet(bdct);
            }
            for (int i = 0; i < 2; i++) {
                bdct.setId_cauhoi(lk.get(i).getId());
                CauHoi ch = cauhoiDAO.getById(lk.get(i).getId());
                HangCau hc = hcDao.getById(ch.getId_hang());
                bdct.setDiem(hc.getMuc_diem());
                bdDAO.insBoDeChiTiet(bdct);
            }
            for (int i = 0; i < 1; i++) {
                bdct.setId_cauhoi(lg.get(i).getId());
                CauHoi ch = cauhoiDAO.getById(lg.get(i).getId());
                HangCau hc = hcDao.getById(ch.getId_hang());
                bdct.setDiem(hc.getMuc_diem());
                bdDAO.insBoDeChiTiet(bdct);
            }
        } else {
            // Xử lí câu hỏi
            bdct.setId_bode(ifie);
            Collections.shuffle(ld);
            Collections.shuffle(ltb);
            Collections.shuffle(lk);
            Collections.shuffle(lg);
            for (int i = 0; i < 8; i++) {
                bdct.setId_cauhoi(ld.get(i).getId());
                CauHoi ch = cauhoiDAO.getById(ld.get(i).getId());
                HangCau hc = hcDao.getById(ch.getId_hang());
                bdct.setDiem(hc.getMuc_diem());
                bdDAO.insBoDeChiTiet(bdct);
            }
            for (int i = 0; i < 6; i++) {
                bdct.setId_cauhoi(ltb.get(i).getId());
                CauHoi ch = cauhoiDAO.getById(ltb.get(i).getId());
                HangCau hc = hcDao.getById(ch.getId_hang());
                bdct.setDiem(hc.getMuc_diem());
                bdDAO.insBoDeChiTiet(bdct);
            }
            for (int i = 0; i < 4; i++) {
                bdct.setId_cauhoi(lk.get(i).getId());
                CauHoi ch = cauhoiDAO.getById(lk.get(i).getId());
                HangCau hc = hcDao.getById(ch.getId_hang());
                bdct.setDiem(hc.getMuc_diem());
                bdDAO.insBoDeChiTiet(bdct);
            }
            for (int i = 0; i < 2; i++) {
                bdct.setId_cauhoi(lg.get(i).getId());
                CauHoi ch = cauhoiDAO.getById(lg.get(i).getId());
                HangCau hc = hcDao.getById(ch.getId_hang());
                bdct.setDiem(hc.getMuc_diem());
                bdDAO.insBoDeChiTiet(bdct);
            }
        }
        JOptionPane.showMessageDialog(this, "Thêm bộ đề thành công!", "Thông báo!", JOptionPane.INFORMATION_MESSAGE);
        // Load tbl_BoDe
        loadFormExam();
        loadTblExam();
    }//GEN-LAST:event_btnSaveExamActionPerformed

    public void idFitInsExam() {
        for (int i = 0; i < cboSubjectExam.getItemCount(); i++) {
            if (cboSubjectExam.getSelectedItem().equals(cboSubjectExam.getItemAt(i))) {
                idQuesExam = cboSubjectExam.getItemAt(i).getId();
            }
        }
    }

    private void btnNewExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewExamActionPerformed
        loadFormExam();
    }//GEN-LAST:event_btnNewExamActionPerformed

    private void btnUpdStatusExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdStatusExamActionPerformed
        int rowSelect = tblExam.getSelectedRow();
        int getValue = (int) tblExam.getValueAt(rowSelect, 0);
        String str = "";
        BoDe bode = bdDAO.getById(getValue);
        if (bode.isTrang_thai() == true) {
            str = " Khóa ";
        } else {
            str = " Mở ";
        }
        int selectUpd = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn" + str + "bộ đề này!", "Thông Báo!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, new ImageIcon("src/img/alert-warning.png"));
        if (selectUpd == 0) {
            bode.setTrang_thai(!bode.isTrang_thai());
            bode.setId(bode.getId());
            bdDAO.updateStatusExam(bode);
            JOptionPane.showMessageDialog(this, str + "bộ đề thành công!", "Thông báo!", JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/img/tick.png"));
            loadTblExam();
        }
    }//GEN-LAST:event_btnUpdStatusExamActionPerformed

    private void loadFormExam() {
        txtIdExam.setText("");
        txtDescExam.setText("");
        cboTotalPoint.setSelectedIndex(0);
        cboSubjectExam.setSelectedIndex(0);
        txtIdExam.requestFocus();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel InsQuestion;
    private javax.swing.JPanel MnExam;
    private javax.swing.JPanel MnLevel;
    private javax.swing.JButton btnDeleteLevel;
    private javax.swing.JButton btnDeleteQuestion;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNewExam;
    private javax.swing.JButton btnNewQuestion;
    private javax.swing.JButton btnSaveExam;
    private javax.swing.JButton btnSaveLevel;
    private javax.swing.JButton btnSaveQuestion;
    private javax.swing.JButton btnUpdQuestion;
    private javax.swing.JButton btnUpdStatusExam;
    private javax.swing.JComboBox<HangCau> cboClass;
    private javax.swing.JComboBox<Mon> cboFindSubject;
    private javax.swing.JComboBox<Mon> cboSubject;
    private javax.swing.JComboBox<Mon> cboSubjectExam;
    private javax.swing.JComboBox<String> cboTotalPoint;
    private javax.swing.JCheckBox chxStatus;
    private javax.swing.ButtonGroup grAnswer;
    private javax.swing.ButtonGroup grpLevelPoint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblTitleInsQues;
    private javax.swing.JLabel lblTitleLevel;
    private javax.swing.JLabel lblTitleQuestion;
    private javax.swing.JLabel lblTitleQuestion2;
    private javax.swing.JLabel lblTitleẼam;
    private javax.swing.JRadioButton rdoA;
    private javax.swing.JRadioButton rdoB;
    private javax.swing.JRadioButton rdoC;
    private javax.swing.JRadioButton rdoD;
    private javax.swing.JRadioButton rdoDiem1;
    private javax.swing.JRadioButton rdoDiem2;
    private javax.swing.JRadioButton rdoDiem3;
    private javax.swing.JRadioButton rdoDiem4;
    private javax.swing.JTable tblExam;
    private javax.swing.JTable tblLevel;
    private javax.swing.JTable tblQuestion;
    private javax.swing.JTextArea txaDescLevel;
    private javax.swing.JTextArea txaNote;
    private javax.swing.JTextField txtA;
    private javax.swing.JTextField txtB;
    private javax.swing.JTextField txtC;
    private javax.swing.JTextField txtD;
    private javax.swing.JTextField txtDescExam;
    private javax.swing.JTextField txtFindQuestion;
    private javax.swing.JTextField txtIdExam;
    private javax.swing.JTextField txtIdLevel;
    private javax.swing.JTextField txtQuestion;
    private javax.swing.JTextField txtSearchExam;
    // End of variables declaration//GEN-END:variables

    private void loadTblHangCau() {
        List<HangCau> listHC = new ArrayList<>();
        listHC = hcDao.getAll();
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Mã Hạng");
        model.addColumn("Mô Tả");
        model.addColumn("Mức Điểm");
        model.addColumn("Ngày Tạo");
        model.addColumn("Ngày Cập Nhật");
        model.addColumn("Trạng Thái");

        for (HangCau item : listHC) {
            Vector rows = new Vector();
            rows.add(item.getId());
            rows.add(item.getMa_hang());
            rows.add(item.getMo_ta());
            rows.add(item.getMuc_diem());
            rows.add(item.getNgay_tao());
            rows.add(item.getNgay_cap_nhat());
            rows.add(item.isStatus() ? "Đang tồn tại" : "Đã Khóa");
            model.addRow(rows);

        }
        tblLevel.setModel(model);

    }

    private void loadCBHangCau() {
        List<HangCau> listHangCau = new ArrayList<>();
        listHangCau = hcDao.getAll();
        for (HangCau item : listHangCau) {
            cboClass.addItem(item);
        }
    }

    private void loadCBMon() {
        List<Mon> listCBMon = new ArrayList<>();
        listCBMon = monDAO.getAll();
        for (Mon item : listCBMon) {
            cboSubject.addItem(item);
            cboFindSubject.addItem(item);
            cboSubjectExam.addItem(item);
        }
    }

    private void loadTblQuestion() {
        List<CauHoi> ch = new ArrayList<>();
        ch = cauhoiDAO.getAll();
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Tên Môn");
        model.addColumn("Hạng Câu");
        model.addColumn("Nội Dung");
        model.addColumn("Đáp Án");
        model.addColumn("Ngày Tạo");
        model.addColumn("Ngày Cập Nhật");
        model.addColumn("Ghi Chú");
        model.addColumn("Trạng Thái");

        for (CauHoi item : ch) {
            Vector rows = new Vector();
            rows.add(item.getId());
            Mon m = monDAO.getById(item.getId_mon());
            rows.add(m.getTen_mon());
            HangCau hc = hcDao.getById(item.getId_hang());
            rows.add(hc.getMo_ta());
            rows.add(item.getNoi_dung());
            DapAn da = daDAO.getByIdQuestion(item.getId());
            rows.add(da.getNoi_dung());
            rows.add(item.getNgay_tao());
            rows.add(item.getNgay_cap_nhat());
            rows.add(item.getGhi_chu());
            rows.add(item.isTrang_thai() ? "Mở" : "Khóa");
            model.addRow(rows);
        }
        tblQuestion.setModel(model);
    }

    private void loadTblExam() {
        List<BoDe> bd = bdDAO.getAll();
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Mã Đề Thi");
        model.addColumn("Tên Môn");
        model.addColumn("Tác Giả");
        model.addColumn("Ngày Tạo");
        model.addColumn("Ngày Cập Nhật");
        model.addColumn("Mô Tả");
        model.addColumn("Trạng Thái");

        for (BoDe item : bd) {
            Vector rows = new Vector();
            rows.add(item.getId());
            rows.add(item.getNoi_dung());
            // Tên môn
            BoDeChiTiet bodeCT = bdDAO.getByIdChiTiet(item.getId(), 0);
            CauHoi ch = cauhoiDAO.getById(bodeCT.getId_cauhoi());
            Mon m = monDAO.getById(ch.getId_mon());
            rows.add(m.getTen_mon());
            // Tên giáo viên
            GiaoVien gv = tdao.getById(item.getId_giangvien());
            rows.add(gv.getHo_ten());
            rows.add(item.getNgay_tao());
            rows.add(item.getNgay_cap_nhat());
            rows.add(item.getMo_ta());
            rows.add(item.isTrang_thai() ? "Mở" : "Khóa");
            model.addRow(rows);
        }
        tblExam.setModel(model);
    }
}
