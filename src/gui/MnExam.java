/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import daoImp.DapAnImplDAO;
import DAOimpl.MonImplDAO;
import contrain.DatabaseConnections;
import dao.BoDeDAO;
import dao.CauHoiDAO;
import dao.DapAnDAO;
import dao.HangCauDAO;
import dao.MonHocDAO;
import dao.TeacherDAO;
import daoImp.BoDeImplDAO;
import daoImp.CauHoiImplDAO;
import daoImp.HangCauImplDAO;
import daoImp.TeacherImplDAO;
import entity.BoDe;
import entity.BoDeChiTiet;
import entity.CauHoi;
import entity.DapAn;
import entity.GiaoVien;
import entity.HangCau;
import entity.Mon;
import java.sql.Connection;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author duyet
 */
public class MnExam extends javax.swing.JPanel {

    private Connection con;
    private HangCauDAO hcDao;
    private MonHocDAO monDAO;
    private CauHoiDAO cauhoiDAO;
    private DapAnDAO daDAO;
    private BoDeDAO bdDAO;
    private TeacherDAO tdao;
    private int hangCauId;
    private int cauhoiId;
    private int idQuesExam;
    private boolean checkEditLevel = true;
    private boolean checkEditQuestion = true;
    GiaoVien teach;

    /**
     * Creates new form MnExam
     */
    public MnExam(GiaoVien gv) {
        initComponents();
        teach = gv;
        con = DatabaseConnections.getConnect();
        hcDao = new HangCauImplDAO(con);
        monDAO = new MonImplDAO(con);
        cauhoiDAO = new CauHoiImplDAO(con);
        daDAO = new DapAnImplDAO(con);
        bdDAO = new BoDeImplDAO(con);
        tdao = new TeacherImplDAO(con);
        loadTblHangCau();
        loadCBMon();
        loadCBHangCau();
        loadTblQuestion();
        loadTblExam();

        // Size Table 
        tblQuestion.setRowHeight(30);
        tblExam.setRowHeight(30);
        tblLevel.setRowHeight(30);
        // Sort Table 
        tblQuestion.setAutoCreateRowSorter(true);
        tblExam.setAutoCreateRowSorter(true);
        tblLevel.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grAnswer = new javax.swing.ButtonGroup();
        grpLevelPoint = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        MnExam = new javax.swing.JPanel();
        lblTitleExam = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        txtIdExam = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtDescExam = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        cboTotalPoint = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        btnSaveExam = new javax.swing.JButton();
        btnNewExam = new javax.swing.JButton();
        btnUpdStatusExam = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JSeparator();
        lblTblExam = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblExam = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        txtSearchExam = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        cboSubjectExam = new javax.swing.JComboBox<>();
        ErrorIdExam = new javax.swing.JLabel();
        ErrorDescExam = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblTitleQuestion = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQuestion = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtFindQuestion = new javax.swing.JTextField();
        btnUpdQuestion = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        cboFindSubject = new javax.swing.JComboBox<>();
        InsQuestion = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cboSubject = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cboClass = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaNote = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        chxStatus = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        txtQuestion = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtA = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtB = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtC = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtD = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnNewQuestion = new javax.swing.JButton();
        btnSaveQuestion = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        rdoA = new javax.swing.JRadioButton();
        rdoB = new javax.swing.JRadioButton();
        rdoC = new javax.swing.JRadioButton();
        rdoD = new javax.swing.JRadioButton();
        btnDeleteQuestion = new javax.swing.JButton();
        lblTitleInsQues = new javax.swing.JLabel();
        ErrorQuestion = new javax.swing.JLabel();
        ErrorNote = new javax.swing.JLabel();
        ErrorAnsA = new javax.swing.JLabel();
        ErrorAnsB = new javax.swing.JLabel();
        ErrorAnsC = new javax.swing.JLabel();
        MnLevel = new javax.swing.JPanel();
        lblTitleLevel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtIdLevel = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaDescLevel = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        rdoDiem1 = new javax.swing.JRadioButton();
        rdoDiem2 = new javax.swing.JRadioButton();
        rdoDiem3 = new javax.swing.JRadioButton();
        rdoDiem4 = new javax.swing.JRadioButton();
        btnSaveLevel = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblLevel = new javax.swing.JTable();
        ErrorLevelId = new javax.swing.JLabel();
        ErrorLevelDesc = new javax.swing.JLabel();

        lblTitleExam.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTitleExam.setForeground(new java.awt.Color(204, 0, 204));
        lblTitleExam.setText("THÊM ĐỀ THI");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Mã đề thi:");

        txtIdExam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("Mô tả:");

        txtDescExam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("Mức Điểm:");

        cboTotalPoint.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        cboTotalPoint.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10 Điểm", "20 Điểm" }));

        jLabel21.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 51, 51));
        jLabel21.setText("*Bộ đề sẽ được tạo ngẫu nhiên dựa trên số điểm bạn chọn!");

        btnSaveExam.setBackground(new java.awt.Color(204, 0, 204));
        btnSaveExam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Save-icon.png"))); // NOI18N
        btnSaveExam.setText("Lưu");
        btnSaveExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveExamActionPerformed(evt);
            }
        });

        btnNewExam.setBackground(new java.awt.Color(204, 0, 204));
        btnNewExam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Clear-icon.png"))); // NOI18N
        btnNewExam.setText("Thêm");
        btnNewExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewExamActionPerformed(evt);
            }
        });

        btnUpdStatusExam.setBackground(new java.awt.Color(204, 0, 204));
        btnUpdStatusExam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update.png"))); // NOI18N
        btnUpdStatusExam.setText("Mở / Khóa");
        btnUpdStatusExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdStatusExamActionPerformed(evt);
            }
        });

        lblTblExam.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTblExam.setForeground(new java.awt.Color(204, 0, 204));
        lblTblExam.setText("DANH SÁCH ĐỀ THI");

        tblExam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(tblExam);

        jLabel22.setText("Tìm kiếm:");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setText("Môn:");

        cboSubjectExam.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        ErrorIdExam.setForeground(new java.awt.Color(255, 0, 51));

        ErrorDescExam.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout MnExamLayout = new javax.swing.GroupLayout(MnExam);
        MnExam.setLayout(MnExamLayout);
        MnExamLayout.setHorizontalGroup(
            MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MnExamLayout.createSequentialGroup()
                .addGap(213, 213, 213)
                .addComponent(lblTitleExam)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(MnExamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(56, 56, 56)
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ErrorIdExam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtIdExam, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
                        .addGap(47, 47, 47))
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addGap(51, 51, 51)
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MnExamLayout.createSequentialGroup()
                                .addComponent(txtDescExam, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 7, Short.MAX_VALUE))
                            .addGroup(MnExamLayout.createSequentialGroup()
                                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(ErrorDescExam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboTotalPoint, 0, 289, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addComponent(jLabel23)
                .addGap(18, 18, 18)
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNewExam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSaveExam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(49, 49, 49)
                        .addComponent(btnUpdStatusExam))
                    .addComponent(cboSubjectExam, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(274, Short.MAX_VALUE))
            .addGroup(MnExamLayout.createSequentialGroup()
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MnExamLayout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(MnExamLayout.createSequentialGroup()
                                .addGap(210, 210, 210)
                                .addComponent(lblTblExam))
                            .addGroup(MnExamLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel22)
                                .addGap(40, 40, 40)
                                .addComponent(txtSearchExam, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator6)
                            .addComponent(jSeparator7)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        MnExamLayout.setVerticalGroup(
            MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MnExamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleExam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtIdExam, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNewExam))
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSaveExam)
                            .addComponent(btnUpdStatusExam)))
                    .addGroup(MnExamLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ErrorIdExam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDescExam, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ErrorDescExam)))
                .addGap(17, 17, 17)
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboSubjectExam, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboTotalPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTblExam)
                .addGap(20, 20, 20)
                .addGroup(MnExamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtSearchExam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(175, 175, 175))
        );

        jTabbedPane1.addTab("Quản lý đề thi", MnExam);

        lblTitleQuestion.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTitleQuestion.setForeground(new java.awt.Color(204, 0, 204));
        lblTitleQuestion.setText("DANH SÁCH CÂU HỎI");

        tblQuestion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblQuestion.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(tblQuestion);

        jLabel1.setText("Tìm kiếm:");

        btnUpdQuestion.setBackground(new java.awt.Color(204, 0, 204));
        btnUpdQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update.png"))); // NOI18N
        btnUpdQuestion.setText("Sửa");
        btnUpdQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdQuestionActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Môn:");

        cboFindSubject.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator5)
                            .addComponent(jScrollPane1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addGap(225, 225, 225)
                                .addComponent(lblTitleQuestion))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFindQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(jLabel17)
                                .addGap(18, 18, 18)
                                .addComponent(cboFindSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 112, 112)
                                .addComponent(btnUpdQuestion)))
                        .addGap(0, 177, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleQuestion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFindQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdQuestion)
                    .addComponent(jLabel17)
                    .addComponent(cboFindSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý câu hỏi", jPanel5);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("ID:");

        lblId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblId.setText("Auto ascending");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Môn:");

        cboSubject.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("Hạng câu:");

        cboClass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("Ghi chú:");

        txaNote.setColumns(20);
        txaNote.setRows(5);
        jScrollPane2.setViewportView(txaNote);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setText("Trạng thái:");

        chxStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chxStatus.setSelected(true);
        chxStatus.setText("Mở / Khóa");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setText("Câu hỏi:");

        txtQuestion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel9.setText("A:");

        txtA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel10.setText("B:");

        txtB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel11.setText("C:");

        txtC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel12.setText("D:");

        txtD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel13.setText("Câu trả lời:");

        btnNewQuestion.setBackground(new java.awt.Color(204, 0, 204));
        btnNewQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Clear-icon.png"))); // NOI18N
        btnNewQuestion.setText("Thêm");
        btnNewQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewQuestionActionPerformed(evt);
            }
        });

        btnSaveQuestion.setBackground(new java.awt.Color(204, 0, 204));
        btnSaveQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Save-icon.png"))); // NOI18N
        btnSaveQuestion.setText("Lưu");
        btnSaveQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveQuestionActionPerformed(evt);
            }
        });

        grAnswer.add(rdoA);
        rdoA.setSelected(true);
        rdoA.setText("A");

        grAnswer.add(rdoB);
        rdoB.setText("B");

        grAnswer.add(rdoC);
        rdoC.setText("C");

        grAnswer.add(rdoD);
        rdoD.setText("D");

        btnDeleteQuestion.setBackground(new java.awt.Color(204, 0, 204));
        btnDeleteQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btnDeleteQuestion.setText("Xóa");

        lblTitleInsQues.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTitleInsQues.setForeground(new java.awt.Color(204, 0, 204));
        lblTitleInsQues.setText("THÊM CÂU HỎI");

        ErrorQuestion.setForeground(new java.awt.Color(255, 0, 51));

        ErrorNote.setForeground(new java.awt.Color(255, 0, 51));

        ErrorAnsA.setForeground(new java.awt.Color(255, 0, 51));

        ErrorAnsB.setForeground(new java.awt.Color(255, 0, 51));

        ErrorAnsC.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout InsQuestionLayout = new javax.swing.GroupLayout(InsQuestion);
        InsQuestion.setLayout(InsQuestionLayout);
        InsQuestionLayout.setHorizontalGroup(
            InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InsQuestionLayout.createSequentialGroup()
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InsQuestionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1)
                            .addGroup(InsQuestionLayout.createSequentialGroup()
                                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(40, 40, 40)
                                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ErrorNote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboSubject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboClass, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chxStatus)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                    .addComponent(lblId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(105, 105, 105)
                                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(InsQuestionLayout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoA)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoB)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoC)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoD))
                                    .addGroup(InsQuestionLayout.createSequentialGroup()
                                        .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel8))
                                        .addGap(38, 38, 38)
                                        .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(ErrorAnsA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtB)
                                            .addComponent(txtA)
                                            .addComponent(txtD)
                                            .addComponent(txtQuestion)
                                            .addComponent(ErrorQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ErrorAnsB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtC)
                                            .addComponent(ErrorAnsC, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 73, Short.MAX_VALUE))))
                    .addGroup(InsQuestionLayout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(lblTitleInsQues))
                    .addGroup(InsQuestionLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(btnNewQuestion)
                        .addGap(79, 79, 79)
                        .addComponent(btnSaveQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(btnDeleteQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        InsQuestionLayout.setVerticalGroup(
            InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InsQuestionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleInsQues)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblId)
                    .addComponent(jLabel8)
                    .addComponent(txtQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorQuestion)
                .addGap(21, 21, 21)
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(ErrorAnsA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InsQuestionLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(chxStatus)))
                    .addGroup(InsQuestionLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ErrorAnsB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorAnsC)
                .addGap(3, 3, 3)
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(InsQuestionLayout.createSequentialGroup()
                        .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(txtD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(rdoA)
                            .addComponent(rdoB)
                            .addComponent(rdoC)
                            .addComponent(rdoD))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorNote)
                .addGap(12, 12, 12)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(InsQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewQuestion)
                    .addComponent(btnSaveQuestion)
                    .addComponent(btnDeleteQuestion))
                .addContainerGap(282, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Thêm câu hỏi", InsQuestion);

        lblTitleLevel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblTitleLevel.setForeground(new java.awt.Color(204, 0, 204));
        lblTitleLevel.setText("SỬA HẠNG CÂU");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Mã hạng:");

        txtIdLevel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Mô tả:");

        txaDescLevel.setColumns(20);
        txaDescLevel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        txaDescLevel.setRows(5);
        jScrollPane3.setViewportView(txaDescLevel);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Mức điểm:");

        grpLevelPoint.add(rdoDiem1);
        rdoDiem1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdoDiem1.setSelected(true);
        rdoDiem1.setText("0.5");

        grpLevelPoint.add(rdoDiem2);
        rdoDiem2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdoDiem2.setText("1.0");

        grpLevelPoint.add(rdoDiem3);
        rdoDiem3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdoDiem3.setText("1.5");

        grpLevelPoint.add(rdoDiem4);
        rdoDiem4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rdoDiem4.setText("2.0");

        btnSaveLevel.setBackground(new java.awt.Color(204, 0, 204));
        btnSaveLevel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Save-icon.png"))); // NOI18N
        btnSaveLevel.setText("Lưu");
        btnSaveLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveLevelActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(204, 0, 204));
        jLabel16.setText("DANH SÁCH HẠNG CÂU");

        tblLevel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblLevel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLevelMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblLevel);

        ErrorLevelId.setForeground(new java.awt.Color(255, 0, 51));

        ErrorLevelDesc.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout MnLevelLayout = new javax.swing.GroupLayout(MnLevel);
        MnLevel.setLayout(MnLevelLayout);
        MnLevelLayout.setHorizontalGroup(
            MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MnLevelLayout.createSequentialGroup()
                .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MnLevelLayout.createSequentialGroup()
                        .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MnLevelLayout.createSequentialGroup()
                                .addGap(237, 237, 237)
                                .addComponent(lblTitleLevel))
                            .addGroup(MnLevelLayout.createSequentialGroup()
                                .addGap(236, 236, 236)
                                .addComponent(jLabel16)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(MnLevelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4)
                            .addGroup(MnLevelLayout.createSequentialGroup()
                                .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel14))
                                .addGap(32, 32, 32)
                                .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ErrorLevelId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtIdLevel)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                                    .addComponent(ErrorLevelDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(MnLevelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jSeparator3))
                                    .addGroup(MnLevelLayout.createSequentialGroup()
                                        .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(MnLevelLayout.createSequentialGroup()
                                                .addGap(171, 171, 171)
                                                .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel15)
                                                    .addGroup(MnLevelLayout.createSequentialGroup()
                                                        .addComponent(rdoDiem1)
                                                        .addGap(50, 50, 50)
                                                        .addComponent(rdoDiem2)
                                                        .addGap(41, 41, 41)
                                                        .addComponent(rdoDiem3)
                                                        .addGap(43, 43, 43)
                                                        .addComponent(rdoDiem4))))
                                            .addGroup(MnLevelLayout.createSequentialGroup()
                                                .addGap(175, 175, 175)
                                                .addComponent(btnSaveLevel)))
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap())
            .addGroup(MnLevelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 998, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );
        MnLevelLayout.setVerticalGroup(
            MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MnLevelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitleLevel)
                .addGap(18, 18, 18)
                .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtIdLevel)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addComponent(ErrorLevelId)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(MnLevelLayout.createSequentialGroup()
                            .addGroup(MnLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rdoDiem1)
                                .addComponent(rdoDiem2)
                                .addComponent(rdoDiem3)
                                .addComponent(rdoDiem4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnSaveLevel))
                        .addGroup(MnLevelLayout.createSequentialGroup()
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ErrorLevelDesc))))
                .addGap(48, 48, 48)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý hạng câu", MnLevel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // LEVEL FUNCTION HANDLE
    private void btnSaveLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveLevelActionPerformed
        //Luu thong tin thay doi tren form them moi va chinh sua hang cau
        HangCau hc = new HangCau();
        if (!txtIdLevel.getText().isEmpty()) {
            hc.setMa_hang(txtIdLevel.getText());
            ErrorLevelId.setText("");
        } else {
            ErrorLevelId.setText("Mã hạng không được để trống!");
        }
        if (!txaDescLevel.getText().isEmpty()) {
            hc.setMo_ta(txaDescLevel.getText());
            ErrorLevelDesc.setText("");
        } else {
            ErrorLevelDesc.setText("Mã hạng không được để trống!");
        }

        if (rdoDiem1.isSelected()) {
            hc.setMuc_diem(Float.parseFloat(rdoDiem1.getText()));
        } else if (rdoDiem2.isSelected()) {
            hc.setMuc_diem(Float.parseFloat(rdoDiem2.getText()));
        } else if (rdoDiem3.isSelected()) {
            hc.setMuc_diem(Float.parseFloat(rdoDiem3.getText()));
        } else {
            hc.setMuc_diem(Float.parseFloat(rdoDiem4.getText()));
        }
        //      ngay tao bang lay ngay thang nam tren he thong may tinh
        Timestamp ts = new Timestamp(new Date().getTime());
        java.sql.Date sqlDou = new java.sql.Date(ts.getTime());
        hc.setNgay_tao(sqlDou);
//      ngay cap nhat mac dinh lay theo ngay tao neu la lan dau tien
        hc.setNgay_cap_nhat(sqlDou);
        hc.setStatus(true);

        // Kiểm tra điền đầy đủ trường
        if (!txtIdLevel.getText().isEmpty() && !txaDescLevel.getText().isEmpty()) {
            //        if (checkEditLevel) {
//            // insert data
//            hcDao.insert(hc);
//            JOptionPane.showMessageDialog(this, "Thêm mới thành công!");
//            loadTblHangCau();
//            loadCBHangCau();
//        } else {
            hc.setId(hangCauId);
            hcDao.update(hc);
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
            txtIdLevel.setText("");
            txaDescLevel.setText("");
            rdoDiem1.setSelected(true);
        }
        loadTblHangCau();
        loadCBHangCau();
//        }

    }//GEN-LAST:event_btnSaveLevelActionPerformed

    private void tblLevelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLevelMouseClicked
        //  click hien thi thong tin len form hang cau
        int rowSelect = tblLevel.getSelectedRow();
        hangCauId = (int) tblLevel.getValueAt(rowSelect, 0);
        HangCau hc = hcDao.getById(hangCauId);
        lblTitleLevel.setText("Sửa Thông Tin Hạng Câu");
        txtIdLevel.setText(hc.getMa_hang());
        txaDescLevel.setText(hc.getMo_ta());
        float checkMark = (float) tblLevel.getValueAt(rowSelect, 3);
        if (checkMark == 0.5) {
            rdoDiem1.setSelected(true);
        } else if (checkMark == 1.0) {
            rdoDiem2.setSelected(true);
        } else if (checkMark == 1.5) {
            rdoDiem3.setSelected(true);
        } else {
            rdoDiem4.setSelected(true);
        }
        checkEditLevel = false;
    }//GEN-LAST:event_tblLevelMouseClicked

    // QUESTION FUNCTION HANDLE
    private void btnUpdQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdQuestionActionPerformed
        lblTitleInsQues.setText("SỬA CÂU HỎI");
        checkEditQuestion = false;
        int selectUpd = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn sửa!", "Thông Báo!", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/img/exit-48px.png"));
        if (selectUpd == 0) {
            loadFormQuestion();
            jTabbedPane1.setSelectedIndex(2);
            int rowSelect = tblQuestion.getSelectedRow();
            cauhoiId = (int) tblQuestion.getValueAt(rowSelect, 0);
            CauHoi ch = cauhoiDAO.getById(cauhoiId);
            txtQuestion.setText(ch.getNoi_dung());
            Mon m = monDAO.getById(ch.getId_mon());
            for (int i = 0; i < cboSubject.getItemCount(); i++) {
                if (cboSubject.getItemAt(i).getTen_mon().equals(m.getTen_mon())) {
                    cboSubject.setSelectedIndex(i);
                }
            }
            HangCau hc = hcDao.getById(ch.getId_hang());
            for (int i = 0; i < cboClass.getItemCount(); i++) {
                if (cboClass.getItemAt(i).getMa_hang().equals(hc.getMa_hang())) {
                    cboClass.setSelectedIndex(i);
                }
            }
            if (ch.isTrang_thai()) {
                chxStatus.setSelected(true);
            }
            txaNote.setText(ch.getGhi_chu());
            // DANH SÁCH ĐÁP ÁN
            List<DapAn> da = daDAO.getAllAnsert(ch.getId());
            int i = 1;
            for (Iterator<DapAn> it = da.iterator(); it.hasNext();) {
                DapAn dapAn = it.next();
                if (i == 1) {
                    txtA.setText(dapAn.getNoi_dung());
                } else if (i == 2) {
                    txtB.setText(dapAn.getNoi_dung());
                } else if (i == 3) {
                    txtC.setText(dapAn.getNoi_dung());
                } else if (i == 4) {
                    txtD.setText(dapAn.getNoi_dung());
                }
                i++;
            }
            DapAn dapan = daDAO.getByIdQuestion(cauhoiId);
            if (dapan.getNoi_dung().equals(txtA.getText())) {
                rdoA.setSelected(true);
            } else if (dapan.getNoi_dung().equals(txtB.getText())) {
                rdoB.setSelected(true);
            } else if (dapan.getNoi_dung().equals(txtC.getText())) {
                rdoC.setSelected(true);
            } else if (dapan.getNoi_dung().equals(txtD.getText())) {
                rdoD.setSelected(true);
            }
        }

    }//GEN-LAST:event_btnUpdQuestionActionPerformed

    private void btnSaveQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveQuestionActionPerformed
        // them moi cau hoi
        CauHoi ch = new CauHoi();
        int idCBSuj = cboSubject.getItemAt(cboSubject.getSelectedIndex()).getId();
        ch.setId_mon(idCBSuj);
        int idCBHangCau = cboClass.getItemAt(cboClass.getSelectedIndex()).getId();
        ch.setId_hang(idCBHangCau);
        // Câu hỏi - Nội dung
        if (!txtQuestion.getText().isEmpty()) {
            ch.setNoi_dung(txtQuestion.getText());
            ErrorQuestion.setText("");
        } else {
            ErrorQuestion.setText("Câu hỏi không được để trống!");
        }
        //      ngay tao bang lay ngay thang nam tren he thong may tinh
        Timestamp ts = new Timestamp(new Date().getTime());
        java.sql.Date sqlDou = new java.sql.Date(ts.getTime());
        // ngay cap nhat mac dinh lay theo ngay tao neu la lan dau tien
        ch.setNgay_cap_nhat(sqlDou);
        // ghi chu
        if (!txaNote.getText().isEmpty()) {
            ch.setGhi_chu(txaNote.getText());
            ErrorNote.setText("");
        } else {
            ErrorNote.setText("Ghi chú không được để trống!");
        }
        // Status
        ch.setTrang_thai(chxStatus.isSelected());

        if (checkEditQuestion) {
            String na = txtA.getText();
            String nb = txtB.getText();
            String nc = txtC.getText();
            String nd = txtD.getText();
            // Get dữ liệu câu trả lời
            if ((na.isEmpty() || !na.isEmpty()) && nb.isEmpty()) {
                ErrorAnsA.setText("Câu hỏi phải có đáp án trả lời!");
                ErrorAnsB.setText("Phải có ít nhất 2 đáp án để chọn!");
            } else if (!na.isEmpty() && nb.isEmpty() && (!nc.isEmpty() || !nd.isEmpty())) {
                ErrorAnsB.setText("Trường này không được bỏ trống!");
                ErrorAnsA.setText("");
            } else if (!na.isEmpty() && !nb.isEmpty() && nc.isEmpty() && !nd.isEmpty()) {
                ErrorAnsC.setText("Trường này không được bỏ trống!");
                ErrorAnsB.setText("");
                ErrorAnsA.setText("");
            } else {
                ch.setNgay_tao(sqlDou);
                if (!txtQuestion.getText().isEmpty() && !txaNote.getText().isEmpty()) {
                    cauhoiDAO.insert(ch);
                }
                int idInsertFit = cauhoiDAO.getIdInsert().getId();
                List<String> list = new ArrayList<>();
                // Add answer to List
                if (!na.isEmpty() && !nb.isEmpty() && !nc.isEmpty() && !nd.isEmpty()) {
                    list.add(na);
                    list.add(nb);
                    list.add(nc);
                    list.add(nd);
                } else if (!na.isEmpty() && !nb.isEmpty() && !nc.isEmpty() && nd.isEmpty()) {
                    list.add(na);
                    list.add(nb);
                    list.add(nc);
                } else if (!na.isEmpty() && !nb.isEmpty() && nc.isEmpty() && nd.isEmpty()) {
                    list.add(na);
                    list.add(nb);
                }
                if (list.size() > 0) {
                    int a = 1;
                    for (String string : list) {
                        DapAn da = new DapAn();
                        da.setId_cauhoi(idInsertFit);

                        if (rdoA.isSelected() && a == 1) {
                            da.setDap_an(true);
                        } else if (rdoB.isSelected() && a == 2) {
                            da.setDap_an(true);
                        } else if (rdoC.isSelected() && a == 3) {
                            da.setDap_an(true);
                        } else if (rdoD.isSelected() && a == 4) {
                            da.setDap_an(true);
                        }
                        if (string != null) {
                            da.setNoi_dung(string);
                            daDAO.insert(da);
                        }
                        a++;
                    }
                    JOptionPane.showMessageDialog(this, "Thêm câu hỏi thành công!", "Thông báo!", JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/img/tick.png"));
                    loadFormQuestion();
                }
                loadTblQuestion();
            }
        } else {
            String na = txtA.getText();
            String nb = txtB.getText();
            String nc = txtC.getText();
            String nd = txtD.getText();
            // Get dữ liệu câu trả lời
            if ((na.isEmpty() || !na.isEmpty()) && nb.isEmpty()) {
                ErrorAnsA.setText("Câu hỏi phải có đáp án trả lời!");
                ErrorAnsB.setText("Phải có ít nhất 2 đáp án để chọn!");
            } else if (!na.isEmpty() && nb.isEmpty() && (!nc.isEmpty() || !nd.isEmpty())) {
                ErrorAnsB.setText("Trường này không được bỏ trống!");
                ErrorAnsA.setText("");
            } else if (!na.isEmpty() && !nb.isEmpty() && nc.isEmpty() && !nd.isEmpty()) {
                ErrorAnsC.setText("Trường này không được bỏ trống!");
                ErrorAnsB.setText("");
                ErrorAnsA.setText("");
            } else {
                ch.setId(cauhoiId);
                if (!txtQuestion.getText().isEmpty() && !txaNote.getText().isEmpty()) {
                    cauhoiDAO.update(ch);
                }
                List<DapAn> ans = daDAO.getAllAnsert(cauhoiId);
                // Nếu không có đáp án thì thêm mới 
                if (!nd.isEmpty() && !nc.isEmpty() && ans.size() == 2) {
                    for (int i = 0; i < 2; i++) {
                        DapAn dap = new DapAn();
                        if (i == 0) {
                            dap.setNoi_dung(nc);
                        } else if (i == 1) {
                            dap.setNoi_dung(nd);
                        }
                        dap.setId_cauhoi(ans.get(0).getId_cauhoi());
                        dap.setDap_an(false);
                        daDAO.insert(dap);
                    }
                } else if (!nc.isEmpty() && ans.size() == 2) {
                    DapAn dap = new DapAn();
                    dap.setNoi_dung(nc);
                    dap.setId_cauhoi(ans.get(0).getId_cauhoi());
                    dap.setDap_an(false);
                    daDAO.insert(dap);
                } else if (!nd.isEmpty() && ans.size() == 3) {
                    DapAn dap = new DapAn();
                    dap.setNoi_dung(nc);
                    dap.setId_cauhoi(ans.get(0).getId_cauhoi());
                    dap.setDap_an(false);
                    daDAO.insert(dap);
                }
                // Xử lí cập nhật đáp án
                int b = 1;
                for (DapAn an : ans) {
                    DapAn da = daDAO.getById(an.getId());
                    da.setId(an.getId());
                    da.setNoi_dung(an.getNoi_dung());
                    if (rdoA.isSelected() && b == 1) {
                        da.setDap_an(true);
                    } else if (rdoB.isSelected() && b == 2) {
                        da.setDap_an(true);
                    } else if (rdoC.isSelected() && b == 3) {
                        da.setDap_an(true);
                    } else if (rdoD.isSelected() && b == 4) {
                        da.setDap_an(true);
                    } else {
                        da.setDap_an(false);
                    }
                    if (nc.isEmpty() && b == 3) {
                        daDAO.delete(an.getId());
                    } else if (nd.isEmpty() && b == 4) {
                        daDAO.delete(an.getId());
                    }
                    daDAO.update(da);
                    b++;
                }
                JOptionPane.showMessageDialog(this, "Cập nhật câu hỏi thành công!", "Thông báo!", JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/img/tick.png"));
                loadFormQuestion();
                loadTblQuestion();
                jTabbedPane1.setSelectedIndex(2);
            }
        }

    }//GEN-LAST:event_btnSaveQuestionActionPerformed

    private void btnNewQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewQuestionActionPerformed
        checkEditQuestion = true;
        loadFormQuestion();
    }//GEN-LAST:event_btnNewQuestionActionPerformed

    private void loadFormQuestion() {
        cboSubject.setSelectedIndex(0);
        cboClass.setSelectedIndex(0);
        chxStatus.setSelected(false);
        txaNote.setText("");
        txtQuestion.setText("");
        txtA.setText("");
        txtB.setText("");
        txtC.setText("");
        txtD.setText("");
        ErrorQuestion.setText("");
        ErrorNote.setText("");
        ErrorAnsA.setText("");
        ErrorAnsB.setText("");
        ErrorAnsC.setText("");
        grAnswer.clearSelection();
    }

    // EXAM FUNCTION HANDLE
    private void btnSaveExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveExamActionPerformed
        BoDe bd = new BoDe();
        bd.setId_giangvien(teach.getId());
        if (!txtIdExam.getText().isEmpty()) {
            bd.setNoi_dung(txtIdExam.getText());
            ErrorIdExam.setText("");
        } else {
            ErrorIdExam.setText("Mã bộ đề không được để trống!");
        }
        Timestamp ts = new Timestamp(new Date().getTime());
        java.sql.Date dateSql = new java.sql.Date(ts.getTime());
        bd.setNgay_tao(dateSql);
        bd.setNgay_cap_nhat(dateSql);
        if (!txtDescExam.getText().isEmpty()) {
            bd.setMo_ta(txtDescExam.getText());
            ErrorDescExam.setText("");
        } else {
            ErrorDescExam.setText("Mô tả không được để trống!");
        }

        bd.setTrang_thai(true);

        // Kiểm tra bộ đề
        List<CauHoi> ques = cauhoiDAO.getAllBySubject(idQuesExam);
        List<CauHoi> ld = new ArrayList<>();
        List<CauHoi> ltb = new ArrayList<>();
        List<CauHoi> lk = new ArrayList<>();
        List<CauHoi> lg = new ArrayList<>();
        ques.forEach((que) -> {
            switch (que.getId_hang()) {
                case 1:
                    ld.add(que);
                    break;
                case 2:
                    ltb.add(que);
                    break;
                case 3:
                    lk.add(que);
                    break;
                case 4:
                    lg.add(que);
                    break;
                default:
                    break;
            }
        });
        if (!txtIdExam.getText().isEmpty() && !txtDescExam.getText().isEmpty()) {
            if (cboTotalPoint.getSelectedIndex() == 0 && ld.size() >= 4 && ltb.size() >= 3 && lk.size() >= 2 && lg.size() >= 1) {
                bdDAO.insert(bd);
            } else if (cboTotalPoint.getSelectedIndex() == 1 && ld.size() >= 8 && ltb.size() >= 6 && lk.size() >= 4 && lg.size() >= 2) {
                bdDAO.insert(bd);
            }

            // Tạo bộ đề chi tiết
            BoDeChiTiet bdct = new BoDeChiTiet();
            int ifie = bdDAO.idFitInsExam().getId();

            // Lấy dữ liệu câu hỏi
            idFitInsExam();

            // Xử lí bộ đề theo điểm
            if (cboTotalPoint.getSelectedIndex() == 0 && ld.size() >= 4 && ltb.size() >= 3 && lk.size() >= 2 && lg.size() >= 1) {
                // Xử lí câu hỏi
                bdct.setId_bode(ifie);
                Collections.shuffle(ld);
                Collections.shuffle(ltb);
                Collections.shuffle(lk);
                Collections.shuffle(lg);
                for (int i = 0; i < 4; i++) {
                    bdct.setId_cauhoi(ld.get(i).getId());
                    CauHoi ch = cauhoiDAO.getById(ld.get(i).getId());
                    HangCau hc = hcDao.getById(ch.getId_hang());
                    bdct.setDiem(hc.getMuc_diem());
                    bdDAO.insBoDeChiTiet(bdct);
                }
                for (int i = 0; i < 3; i++) {
                    bdct.setId_cauhoi(ltb.get(i).getId());
                    CauHoi ch = cauhoiDAO.getById(ltb.get(i).getId());
                    HangCau hc = hcDao.getById(ch.getId_hang());
                    bdct.setDiem(hc.getMuc_diem());
                    bdDAO.insBoDeChiTiet(bdct);
                }
                for (int i = 0; i < 2; i++) {
                    bdct.setId_cauhoi(lk.get(i).getId());
                    CauHoi ch = cauhoiDAO.getById(lk.get(i).getId());
                    HangCau hc = hcDao.getById(ch.getId_hang());
                    bdct.setDiem(hc.getMuc_diem());
                    bdDAO.insBoDeChiTiet(bdct);
                }
                for (int i = 0; i < 1; i++) {
                    bdct.setId_cauhoi(lg.get(i).getId());
                    CauHoi ch = cauhoiDAO.getById(lg.get(i).getId());
                    HangCau hc = hcDao.getById(ch.getId_hang());
                    bdct.setDiem(hc.getMuc_diem());
                    bdDAO.insBoDeChiTiet(bdct);
                }
                JOptionPane.showMessageDialog(this, "Thêm bộ đề thành công!", "Thông báo!", JOptionPane.INFORMATION_MESSAGE);
            } else if (cboTotalPoint.getSelectedIndex() == 1 && ld.size() >= 8 && ltb.size() >= 6 && lk.size() >= 4 && lg.size() >= 2) {
                // Xử lí câu hỏi
                bdct.setId_bode(ifie);
                Collections.shuffle(ld);
                Collections.shuffle(ltb);
                Collections.shuffle(lk);
                Collections.shuffle(lg);
                for (int i = 0; i < 8; i++) {
                    bdct.setId_cauhoi(ld.get(i).getId());
                    CauHoi ch = cauhoiDAO.getById(ld.get(i).getId());
                    HangCau hc = hcDao.getById(ch.getId_hang());
                    bdct.setDiem(hc.getMuc_diem());
                    bdDAO.insBoDeChiTiet(bdct);
                }
                for (int i = 0; i < 6; i++) {
                    bdct.setId_cauhoi(ltb.get(i).getId());
                    CauHoi ch = cauhoiDAO.getById(ltb.get(i).getId());
                    HangCau hc = hcDao.getById(ch.getId_hang());
                    bdct.setDiem(hc.getMuc_diem());
                    bdDAO.insBoDeChiTiet(bdct);
                }
                for (int i = 0; i < 4; i++) {
                    bdct.setId_cauhoi(lk.get(i).getId());
                    CauHoi ch = cauhoiDAO.getById(lk.get(i).getId());
                    HangCau hc = hcDao.getById(ch.getId_hang());
                    bdct.setDiem(hc.getMuc_diem());
                    bdDAO.insBoDeChiTiet(bdct);
                }
                for (int i = 0; i < 2; i++) {
                    bdct.setId_cauhoi(lg.get(i).getId());
                    CauHoi ch = cauhoiDAO.getById(lg.get(i).getId());
                    HangCau hc = hcDao.getById(ch.getId_hang());
                    bdct.setDiem(hc.getMuc_diem());
                    bdDAO.insBoDeChiTiet(bdct);
                }
                JOptionPane.showMessageDialog(this, "Thêm bộ đề thành công!", "Thông báo!", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Không đủ câu hỏi để tạo bộ đề!", "Thông báo!", JOptionPane.WARNING_MESSAGE);
            }
            // Load tbl_BoDe
            loadFormExam();
        }
        loadTblExam();
    }//GEN-LAST:event_btnSaveExamActionPerformed

    public void idFitInsExam() {
        for (int i = 0; i < cboSubjectExam.getItemCount(); i++) {
            if (cboSubjectExam.getSelectedItem().equals(cboSubjectExam.getItemAt(i))) {
                idQuesExam = cboSubjectExam.getItemAt(i).getId();
            }
        }
    }

    private void btnNewExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewExamActionPerformed
        loadFormExam();
    }//GEN-LAST:event_btnNewExamActionPerformed

    private void btnUpdStatusExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdStatusExamActionPerformed
        int rowSelect = tblExam.getSelectedRow();
        int getValue = (int) tblExam.getValueAt(rowSelect, 0);
        String str = "";
        BoDe bode = bdDAO.getById(getValue);
        if (bode.isTrang_thai() == true) {
            str = " Khóa ";
        } else {
            str = " Mở ";
        }
        int selectUpd = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn" + str + "bộ đề này!", "Thông Báo!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, new ImageIcon("src/img/alert-warning.png"));
        if (selectUpd == 0) {
            bode.setTrang_thai(!bode.isTrang_thai());
            bode.setId(bode.getId());
            bdDAO.updateStatusExam(bode);
            JOptionPane.showMessageDialog(this, str + "bộ đề thành công!", "Thông báo!", JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/img/tick.png"));
            loadTblExam();
        }
    }//GEN-LAST:event_btnUpdStatusExamActionPerformed

    private void loadFormExam() {
        txtIdExam.setText("");
        txtDescExam.setText("");
        ErrorIdExam.setText("");
        ErrorDescExam.setText("");
        cboTotalPoint.setSelectedIndex(0);
        cboSubjectExam.setSelectedIndex(0);
        txtIdExam.requestFocus();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ErrorAnsA;
    private javax.swing.JLabel ErrorAnsB;
    private javax.swing.JLabel ErrorAnsC;
    private javax.swing.JLabel ErrorDescExam;
    private javax.swing.JLabel ErrorIdExam;
    private javax.swing.JLabel ErrorLevelDesc;
    private javax.swing.JLabel ErrorLevelId;
    private javax.swing.JLabel ErrorNote;
    private javax.swing.JLabel ErrorQuestion;
    private javax.swing.JPanel InsQuestion;
    private javax.swing.JPanel MnExam;
    private javax.swing.JPanel MnLevel;
    private javax.swing.JButton btnDeleteQuestion;
    private javax.swing.JButton btnNewExam;
    private javax.swing.JButton btnNewQuestion;
    private javax.swing.JButton btnSaveExam;
    private javax.swing.JButton btnSaveLevel;
    private javax.swing.JButton btnSaveQuestion;
    private javax.swing.JButton btnUpdQuestion;
    private javax.swing.JButton btnUpdStatusExam;
    private javax.swing.JComboBox<HangCau> cboClass;
    private javax.swing.JComboBox<Mon> cboFindSubject;
    private javax.swing.JComboBox<Mon> cboSubject;
    private javax.swing.JComboBox<Mon> cboSubjectExam;
    private javax.swing.JComboBox<String> cboTotalPoint;
    private javax.swing.JCheckBox chxStatus;
    private javax.swing.ButtonGroup grAnswer;
    private javax.swing.ButtonGroup grpLevelPoint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblTblExam;
    private javax.swing.JLabel lblTitleExam;
    private javax.swing.JLabel lblTitleInsQues;
    private javax.swing.JLabel lblTitleLevel;
    private javax.swing.JLabel lblTitleQuestion;
    private javax.swing.JRadioButton rdoA;
    private javax.swing.JRadioButton rdoB;
    private javax.swing.JRadioButton rdoC;
    private javax.swing.JRadioButton rdoD;
    private javax.swing.JRadioButton rdoDiem1;
    private javax.swing.JRadioButton rdoDiem2;
    private javax.swing.JRadioButton rdoDiem3;
    private javax.swing.JRadioButton rdoDiem4;
    private javax.swing.JTable tblExam;
    private javax.swing.JTable tblLevel;
    private javax.swing.JTable tblQuestion;
    private javax.swing.JTextArea txaDescLevel;
    private javax.swing.JTextArea txaNote;
    private javax.swing.JTextField txtA;
    private javax.swing.JTextField txtB;
    private javax.swing.JTextField txtC;
    private javax.swing.JTextField txtD;
    private javax.swing.JTextField txtDescExam;
    private javax.swing.JTextField txtFindQuestion;
    private javax.swing.JTextField txtIdExam;
    private javax.swing.JTextField txtIdLevel;
    private javax.swing.JTextField txtQuestion;
    private javax.swing.JTextField txtSearchExam;
    // End of variables declaration//GEN-END:variables

    private void loadTblHangCau() {
        List<HangCau> listHC = new ArrayList<>();
        listHC = hcDao.getAll();
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Mã Hạng");
        model.addColumn("Mô Tả");
        model.addColumn("Mức Điểm");
        model.addColumn("Ngày Tạo");
        model.addColumn("Ngày Cập Nhật");
        model.addColumn("Trạng Thái");

        for (HangCau item : listHC) {
            Vector rows = new Vector();
            rows.add(item.getId());
            rows.add(item.getMa_hang());
            rows.add(item.getMo_ta());
            rows.add(item.getMuc_diem());
            rows.add(item.getNgay_tao());
            rows.add(item.getNgay_cap_nhat());
            rows.add(item.isStatus() ? "Đang tồn tại" : "Đã Khóa");
            model.addRow(rows);

        }
        tblLevel.setModel(model);

    }

    private void loadCBHangCau() {
        List<HangCau> listHangCau = new ArrayList<>();
        listHangCau = hcDao.getAll();
        for (HangCau item : listHangCau) {
            cboClass.addItem(item);
        }
    }

    private void loadCBMon() {
        List<Mon> listCBMon = new ArrayList<>();
        listCBMon = monDAO.getAll();
        for (Mon item : listCBMon) {
            cboSubject.addItem(item);
            cboFindSubject.addItem(item);
            cboSubjectExam.addItem(item);
        }
    }

    private void loadTblQuestion() {
        List<CauHoi> ch = new ArrayList<>();
        ch = cauhoiDAO.getAll();
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Tên Môn");
        model.addColumn("Hạng Câu");
        model.addColumn("Nội Dung");
        model.addColumn("Đáp Án");
        model.addColumn("Ngày Tạo");
        model.addColumn("Ngày Cập Nhật");
        model.addColumn("Ghi Chú");
        model.addColumn("Trạng Thái");

        for (CauHoi item : ch) {
            Vector rows = new Vector();
            rows.add(item.getId());
            Mon m = monDAO.getById(item.getId_mon());
            rows.add(m.getTen_mon());
            HangCau hc = hcDao.getById(item.getId_hang());
            rows.add(hc.getMo_ta());
            rows.add(item.getNoi_dung());
            DapAn da = daDAO.getByIdQuestion(item.getId());
            rows.add(da.getNoi_dung());
            rows.add(item.getNgay_tao());
            rows.add(item.getNgay_cap_nhat());
            rows.add(item.getGhi_chu());
            rows.add(item.isTrang_thai() ? "Mở" : "Khóa");
            model.addRow(rows);
        }
        tblQuestion.setModel(model);
    }

    private void loadTblExam() {
        List<BoDe> bd = bdDAO.getAll();
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Mã Đề Thi");
        model.addColumn("Tên Môn");
        model.addColumn("Tác Giả");
        model.addColumn("Ngày Tạo");
        model.addColumn("Ngày Cập Nhật");
        model.addColumn("Mô Tả");
        model.addColumn("Trạng Thái");

        for (BoDe item : bd) {
            Vector rows = new Vector();
            rows.add(item.getId());
            rows.add(item.getNoi_dung());
            // Tên môn
            BoDeChiTiet bodeCT = bdDAO.getByIdChiTiet(item.getId(), 0);
            CauHoi ch = cauhoiDAO.getById(bodeCT.getId_cauhoi());
            Mon m = monDAO.getById(ch.getId_mon());
            rows.add(m.getTen_mon());
            // Tên giáo viên
            GiaoVien gv = tdao.getById(item.getId_giangvien());
            rows.add(gv.getHo_ten());
            rows.add(item.getNgay_tao());
            rows.add(item.getNgay_cap_nhat());
            rows.add(item.getMo_ta());
            rows.add(item.isTrang_thai() ? "Mở" : "Khóa");
            model.addRow(rows);
        }
        tblExam.setModel(model);
    }
}
